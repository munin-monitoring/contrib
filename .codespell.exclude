        echo "succes.label Login success"
        echo "succes.draw AREA"
echo "succes.value $success"
Tim Small <tim@seoss.co.uk>
    accesss      => 'NFSPROC3_ACCESS (Check Access Permission)',
# Beginn des modifizierten Skriptes        - Beginning of the modified script  #
				[ /(\d+) packets with ECN ECT\(0\) bit set$/, [ [ :packets, 'ECT(0) bit' ] ] ],
				[ /(\d+) packets with ECN ECT\(1\) bit set$/, [ [ :packets, 'ECT(1) bit' ] ] ],
				[ /(\d+) ARP entrys? timed out$/, [ [ :entries, 'timed out' ] ] ],
echo -en "recieved.value "
	print "require dont.graph.anything [0-9]+\n"
# Informations générales :
#   Marge de bruit         5.10 dB            5.60 dB           
#   Adresse MAC Freebox            XX:XX:XX:XX:XX:XX
#   Adresse IP                     203.0.113.60            
#   Adresse IP privée              192.0.2.1             
#   Adresse IP DMZ                 192.0.2.2             
#   Adresse IP Freeplayer          192.0.2.0             
#   Adresse MAC            Adresse IP                  
# Linjen som grep'es ut kan se ut som dette:
# Linjen som grep'es ut kan se ut som dette:
VISITORS="$(echo '<doc><item>munin</item></doc>' | curl --silent -X POST -H 'Content-type: text/xml' -d @- http://api.trafic.ro/rest/0.01/sumar-site/$RID |  xmlstarlet sel -t -m "/sumar-site/vizitatori_ultimele_24_ore" -v ".")"
#  - Serien Timer werden nun separat gezaehlt (anzahl pro Woche)
#  - Timer werden nur ignoriert wenn sie 0(inaktiv) als Status haben
    primary muss ein iterable oder StringType sein
    secondary muss iterable oder StringType sein
		print  ("d.label Design voltage\nd.type GAUGE\nd.draw AREA\n");
	if ($str =~ /^(no?|0|f(alse)?)$/i) {
# (Based off the perl munin plugin by Joan Carles Soler)
    <hist>
    </hist>
Christian Loos <cloos@netsandbox.de>
#  - kein div 0 Fehler mehr wenn der  Host nicht zu erreichen ist
#  - im Namen kann Munin-konform der Hostname mit angegeben werden: vdr_localhost vdr_192.168.0.2, ... (localhost ist default)
    print "platte.info Angabe, wieviel der von VDR beschreibbaren Festplatten belegt ist.\n";
	echo 'graph_title Samba Locked Files'
	echo 'graph_vlabel number of locked files'
	echo 'samba_locked.label Locked Files'
	echo 'lock.label Locked files'
    echo 'graph_info This graph shows the Memory used by process'
	echo 'shares.label shared files'
# Based on Tim Wulkau's script. Thank you!
        echo 'graph_title Memory usage by process'
	echo 'VmSize.info The size of the virtual memory allocated to the process'
grep -v 'Preparing to download files' | \
