#!/usr/local/bin/php
<?php
/*
* munin_byprojects_inout_bandwidth
*
* PHP script to monitor in/out bandwidth *byprojects* (e.g. vhost) from multiple files and/or regex.
*
* Danny Fullerton <northox@mantor.org> 
* Mantor Organization <www.mantor.org>
* This work is licensed under a Creative Commons Attribution 3.0 Unported License.
*
* You need logtail (https://www.fourmilab.ch/webtools/logtail/) and 
*
* Apache:
* mod_logio apache module (https://httpd.apache.org/docs/2.0/mod/mod_logio.html).
* Your logformat should look like this "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\" %I %O"
* where %I is input and %O is output.
*
* Nginx:
* Your configuration should look like this (i.e. $request_length $body_bytes_sent at the end):
*   log_format main  '$remote_addr - $remote_user $time_local "$request" '
*                    '$status $body_bytes_sent "$http_referer" '
*                    '"$http_user_agent" $request_length $body_bytes_sent';
*
* Log can be gather from multiple sources by simply specifying multiple log filename and/or an array with two
* elements: log filename and a regex.
*   - 'prod' => array('/home/prod/log/access.log'),
*     Prod graph will be using everything in /home/prod/log/access.log
*   - 'test' => array(array('/var/log/httpd/access.log', '"[A-Z]+ /test/'), '/home/test/log/access.log')
*     Test graph will be using eveything in /home/test/log/access.log and stuff that match '"[A-Z] /test/' in 
*     /var/log/httpd/access.log such as '"GET /test/'
*/

$server = 'Apache'; # define the wev server in use
#$server = 'Nginx';

$statepath = '/usr/local/var/munin/plugin-state'; // directory where logtail will save the state
$logtail = '/usr/local/bin/logtail';

$logs = array(
'prod' => array('/home/prod/log/access.log'),
'test' => array(
                array('/var/log/httpd/access.log', '"[A-Z]+ /test/'),
                '/home/test/log/access.log'
          )
);

///////////////

if(isset($argv[1])) {
  if ($argv[1] == 'autoconf') {
    print "yes\n";
    exit(0);
  } elseif ($argv[1] == 'config') {
    $order = '';
    print "graph_order $order\n";
    print "graph_title $server in/out bandwidth byprojects\n";
    print "graph_args --base 1000\n";
    print "graph_vlabel bits per \${graph_period} in (-) / out (+)\n";
    print "graph_category $server\n";
    print "graph_info This graph show $server in/out bandwidth used by various projects.\n";
    foreach ($logs as $client => $files) {
      print "i".$client.".label $client\n";
      print "i".$client.".type GAUGE\n";
      print "i".$client.".graph no\n";
      print "i".$client.".cdef i".$client.",8,*\n";
      print "o".$client.".label $client\n";
      print "o".$client.".type GAUGE\n";
      print "o".$client.".negative i".$client."\n";
      print "o".$client.".cdef o".$client.",8,*\n";
    }
    exit(0);
  }
}

foreach ($logs as $client => $files) {
  $i = $o = $x = 0;
  foreach ($files as $file) {
    $regex = null;
    $state = $statepath.'/'.$client.$x.'_inoutbandwidth.state';
    if(is_array($file)) list($file, $regex) = $file;
    $h = popen("$logtail -f $file -o $state", 'r');
    while (!feof($h)) {
      $buf = fgets($h, 4096);
      // if regex is null every line is a new request, otherwise, apply regex filter
      if($regex == null || preg_match($regex, $buf)) {
        // get logio apache module info (e.g. "GET /example 123 44" where 123 = in, 44 = out)
        if(preg_match('/(\d+) (\d+)$/', $buf, $match)) {
          $i += $match[1];
          $o += $match[2];
        }
      }
    }
    pclose($h);
    $x++;
  }
  print "i".$client.".value $i\n";
  print "o".$client.".value $o\n";
}
?>
