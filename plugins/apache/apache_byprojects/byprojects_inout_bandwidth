#!/usr/bin/perl -w
use strict;
#
# byprojects_inout_bandwidth
#
# Perl script to monitor in/out bandwidth *byprojects* (e.g. vhost) from multiple files and/or regex.
#
# Danny Fullerton <northox@mantor.org> 
# Mantor Organization <www.mantor.org>
# This work is licensed under a Creative Commons Attribution 3.0 Unported License.
#
# You need logtail (https://www.fourmilab.ch/webtools/logtail/)
#
# mod_logio apache module (https://httpd.apache.org/docs/2.0/mod/mod_logio.html).
# Your logformat should look like this "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\" %I %O"
# where %I is input and %O is output.
#
# Log can be gathered from multiple sources by simply specifying multiple log filename 
# and/or a log filename and a regex.
#   - 'prod' => [ {'path' => '/home/prod/log/access.log'} ],
#     Prod graph will be using everything in /home/prod/log/access.log
#   - 'test' => [ {'path' => '/var/log/access.log', 'regex' => '"[A-Z]+ /test/'},
#                 {'path' => '/home/test/log/access.log'} ],
#     Test graph will be using everything in /home/test/log/access.log and stuff that match 
#     '"[A-Z] /test/' in /var/log/access.log such as '"GET /test/'

my $server = 'Apache';

my $statepath = '/usr/local/var/munin/plugin-state'; # where logtail will save the state
my $logtail = '/usr/local/bin/logtail';

my %logs = (
    'prod' => [
                {'path' => '/home/prod/log/access.log'}
              ],
    'dev'  => [
                {'path' => '/var/log/httpd/ssl-dev-access.log'},
                {'path' => '/home/dev/log/access.log'}
              ],
    'test' => [
                {'path' => '/var/log/access.log', 'regex' => '"[A-Z]+ /test/'},
                {'path' => '/home/test/log/access.log'}
              ],
);


###########

if(defined($ARGV[0])) {
  if ($ARGV[0] eq 'autoconf') {
    print "yes\n";
    exit(0);
  } elsif ($ARGV[0] eq 'config') {
    print "graph_title $server in/out bandwidth byprojects\n";
    print "graph_args --base 1000\n";
    print "graph_vlabel bits per \${graph_period} in (-) / out (+)\n";
    print "graph_category $server\n";
    print "graph_info This graph show $server in/out bandwidth used by various projects.\n";
    while ((my $project, my @files) = each(%logs)) {
      print "i".$project.".label $project\n";
      print "i".$project.".type GAUGE\n";
      print "i".$project.".graph no\n";
      print "i".$project.".cdef i".$project.",8,*\n";
      print "o".$project.".label $project\n";
      print "o".$project.".type GAUGE\n";
      print "o".$project.".negative i".$project."\n";
      print "o".$project.".cdef o".$project.",8,*\n";
    }
    exit(0);
  }
}

foreach my $project ( keys %logs )  {
  my $i = 0;
  my $o = 0;
  my $x = 0;
  foreach my $log ( @{$logs{$project}} ) {
    my $state = $statepath.'/'.$project.$x.'_inoutbandwidth.state';
    open(LT, "$logtail -f ".$log->{'path'}." -o $state |") or die "Can't open $logtail : $!";
    while (<LT>) {
      my $buf = $_;
      if($buf eq '') { next }
      if(!defined($log->{'regex'}) || $buf =~ m/$log->{'regex'}/) {
        if($buf =~ m/(\d+) (\d+)$/) {
          $i += $1;
          $o += $2;
        }
      }
    }
    close(LT);
    $x++;
  }
  print "i".$project.".value $i\n";
  print "o".$project.".value $o\n";
}
