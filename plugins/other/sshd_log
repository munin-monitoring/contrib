#!/bin/sh

: <<=cut

=head1 NAME

sshd_log - Munin plugin to monitor auth.log or journald for sshd
           server events.

=head1 CONFIGURATION

This plugin requires read permission for the logfile or journald.

On busy servers you can change value type to COUNTER and set min to 0
to avoid minus peaks at logrotate.

The following environment variables are used by this plugin:

 logfile  - path to the auth log file, or "journald" to use journald.
            default: /var/log/secure

If the "logfile" environment variable is set to "journald" the sshd
logs are read from journald, from the unit "sshd.service". The unit
name may be specified by setting "logfile" to "journald:<unit_name>".


Config examples for /etc/munin/plugin-conf.d/munin-node:

  [sshd_log]
      user root
      group root
      env.logfile /var/log/messages

Config example with journald:

  [sshd_log]
      group systemd-journal
      env.logfile journald

Config example with journald on another service:

  [sshd_log]
      group systemd-journal
      env.logfile journald:sshd_custom.service

=head1 MAGIC MARKERS

  #%# family=auto
  #%# capabilities=autoconf

=head1 AUTHOR

Revision 1.3  2016/11/11 15:42:00  Thomas Riccardi
Revision 1.2  2010/03/19 15:03:00  pmoranga
Revision 1.1  2009/04/26 23:28:00  ckujau
Revision 1.0  2009/04/22 22:00:00  zlati

=cut


# Script parameters:
#
#       config   (required)
#       autoconf (optional - used by munin-config)


LOG=${logfile:-/var/log/secure}
JOURNALD_UNIT=
case "$logfile" in
        journald)
                JOURNALD_UNIT=sshd.service;;
        journald:*)
                JOURNALD_UNIT=${logfile#journald:};;
esac

if [ "$1" = "autoconf" ]; then
        if [ -n "$JOURNALD_UNIT" ]; then
                if journalctl -F _SYSTEMD_UNIT | grep -q "$JOURNALD_UNIT"; then
                        echo "yes"
                else
                        echo "no (journald unit '$JOURNALD_UNIT' not found)"
                fi
        else
                if [ -r "$LOG" ]; then
                        echo "yes"
                else
                        echo "no (logfile '$LOG' not readable)"
                fi
        fi
        exit 0
fi

if [ "$1" = "config" ]; then

        echo 'graph_title SSHD login stats from' "$LOG"
        echo 'graph_args --base 1000 -l 0'
        echo 'graph_vlabel logins'
        echo 'graph_category system'

        echo 'LogPass.label Successful password logins'
        echo 'LogPassPAM.label Successful login via PAM'
        echo 'LogKey.label Successful PublicKey logins'
        echo 'NoID.label No identification from user'
        echo 'rootAttempt.label Root login attempts'
        echo 'InvUsr.label Invalid user login attepmts'
        echo 'NoRDNS.label No reverse DNS for peer'
        echo 'Breakin.label Potential Breakin Attempts'
        exit 0
fi

if [ -n "$JOURNALD_UNIT" ]; then
        journalctl --no-pager --quiet --unit "$JOURNALD_UNIT"
else
        cat "$LOG"
fi | \
    awk 'BEGIN{c["LogPass"]=0;c["LogKey"]=0;c["NoID"]=0;c["rootAttempt"]=0;c["InvUsr"]=0;c["LogPassPAM"]=0;c["Breakin"]=0;c["NoRDNS"]=0; }
     /sshd\[.*Accepted password for/{c["LogPass"]++}
     /sshd\[.*Accepted publickey for/{c["LogKey"]++}
     /sshd\[.*Did not receive identification string/{c["NoID"]++}
     /sshd\[.*Failed password for root/{c["rootAttempt"]++}
     /sshd\[.*Invalid user/{c["InvUsr"]++}
     /sshd\[.*POSSIBLE BREAK-IN ATTEMPT!/{c["Breakin"]++}
     /sshd\[.*keyboard-interactive\/pam/{c["LogPassPAM"]++}
     /sshd\[.*reverse mapping checking getaddrinfo/{c["NoRDNS"]++}a
     END{for(i in c){print i".value " c[i]} }'
