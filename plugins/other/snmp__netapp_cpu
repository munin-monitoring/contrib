#!/usr/bin/perl

use strict;
use warnings;
use Munin::Plugin::SNMP;
use vars qw($DEBUG);

$DEBUG = $ENV{'MUNIN_DEBUG'};

my %oids = (
#        cpuUpTime			=> 'CPU_UPTIME',
#        cpuBusyTime			=> 'CPU_BUSYTIME',
        cpuBusyTimePerCent		=> 'Busy',
#        cpuIdleTime			=> 'CPU_IDLETIME',
        cpuIdleTimePerCent		=> 'Idle',
#        cpuCount			=> 'CPU_COUNT',
#        cpuSwitchInvocations		=> 'CPU_SWTICHINVOCATIONS',
#        cpuContextSwitches		=> 'CPU_CONTEXTSWITCHES',
#        cpuInterrupts			=> 'CPU_INTERRUPTS',
#        cpuNonCPInterrupts		=> 'CPU_NONCPINTERRUPTS',
#        cpuCPInterruptPercent		=> 'CPU_CPINTERRUPTPERCENT',
#        cpuNonCPInterruptPercent	=> 'CPU_NONCPINTERRUPTPERCENT',
#        cpuTotalDomainSwitches  	=> 'CPU_TOTALDOMAINSWITCHES',
);

if (defined $ARGV[0] and $ARGV[0] eq 'snmpconf') {
    print "require 1.3.6.1.4.1.789.1.2.1. [0-9]\n";
    exit 0;
}

my $session = Munin::Plugin::SNMP->session();

if (defined $ARGV[0] and $ARGV[0] eq "config") {

    my ($host, undef, undef, undef) = Munin::Plugin::SNMP->config_session();

    print "host_name $host\n" unless $host eq 'localhost';
    print "graph_title $host CPU \n";
    print "graph_args --base 1000 -r --lower-limit 0 --upper-limit 100\n";
    print "graph_vlabel CPU \n";
    print "graph_category CPU\n";
    print "graph_info This graph shows cpu busy value for the $host in percent.\n";
    print "graph_order ";

    foreach (sort keys %oids) { print "$_ "; }
    print "\n";

    foreach my $k (sort keys %oids) {
        print "$k.info The cpu $oids{$k} value in percent\n";
        print "$k.label $oids{$k}\n";
        print "$k.min 0\n";
	print "$k.draw AREASTACK\n";
	print "$k.type GAUGE\n";
    }

    exit 0;
}

my $values = $session->get_hash(
    -baseoid => '1.3.6.1.4.1.789.1.2.1',
    -cols    => {
#	1  => 'cpuUpTime',
#	2  => 'cpuBusyTime',
	3  => 'cpuBusyTimePerCent',
#	4  => 'cpuIdleTime',
	5  => 'cpuIdleTimePerCent',
#	6  => 'cpuCount',
#	7  => 'cpuSwitchInvocations',
#	8  => 'cpuContextSwitches',
#	9  => 'cpuInterrupts',
#	10 => 'cpuNonCPInterrupts',
#	11 => 'cpuCPInterruptPercent',
#	12 => 'cpuNonCPInterruptPercent',
#	13 => 'cpuTotalDomainSwitches',
    },
);

foreach my $k (keys %oids) {
    my $v = 'U';
    $v = $values->{0}->{$k} if (defined $values);
    print "$k.value $v\n";
}

exit 0;

__END__
