#!/usr/bin/perl
#
# Munin plugin for number of spots by categories in a MySQL database
#
# Copyright (C) 2011 - Rowdy Schwachöfer (http://rowdy.nl)
#
# Spotweb       : http://github.com/spotweb/spotweb
#
# This program is free software: you can redistribute it and/or modify 
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#
# Configuration example
#
# [spotweb*]
# env.mysql /usr/bin/mysql                               # MySQL binary (optional)
# env.mysqlopts -u <MYSQL_USERNAME> -p<MYSQL_PASSWORD>   # How to connect to the database (optional if no password is set)
# env.database spotweb                                   # Spotweb database (optional)
#
# [spotweb_cat_average]
# env.period 1800                                        # The period over wich to check in seconds, default to 30 minutes (1800 seconds)
# env.countporn 'no'                                     # Also count porn? Default is 'yes'
#

use strict;


# Environment variables
my $MYSQL      = $ENV{mysql}      || "/usr/bin/mysql";
my $MYSQLOPTS  = $ENV{mysqlopts}  || "";
my $DATABASE   = $ENV{database}   || "spotweb";
my $PERIOD     = $ENV{period}     || 1800;
my $COUNTPORN 	= $ENV{countporn} || "yes";


# Local variables
my $FROMSTAMP  = time - $PERIOD;
my $TITLE      = "Spotweb spots by Category (".($PERIOD / 60)." minute average)";


# Output for config
if(defined $ARGV[0] && $ARGV[0] eq 'config') {
    print <<EOC
graph_title $TITLE
graph_vlabel Spots
graph_category spotweb
cat0.label Videos/images
cat0.colour 008edf
cat1.label Music
cat1.colour e9a213
cat2.label Games
cat2.colour 00de00
cat3.label Applications
cat3.colour de2500
EOC
;
    exit 0;
}


# Output of values. We just call a subroutine here to prevent much duplicate code
if($COUNTPORN eq 'yes') { 
    &print_value(0);
}
else { 
# 11-04-2011 - New pr0n filters
#   &print_value(0, " AND subcatd NOT LIKE '%23%' AND subcatd NOT LIKE '%24%' AND subcatd NOT LIKE '%25%' AND subcatd NOT LIKE '%26%'");
    &print_value(0, " AND subcatz NOT LIKE '%4%' AND subcatd NOT LIKE '%23%' AND subcatd NOT LIKE '%24%' AND subcatd NOT LIKE '%25%' AND subcatd NOT LIKE '%26%' AND subcatd NOT LIKE '%72%' AND subcatd NOT LIKE '%73%' AND subcatd NOT LIKE '%74%' AND subcatd NOT LIKE '%75%' AND subcatd NOT LIKE '%76%' AND subcatd NOT LIKE '%77%' AND subcatd NOT LIKE '%78%' AND subcatd NOT LIKE '%79%' AND subcatd NOT LIKE '%80%' AND subcatd NOT LIKE '%81%' AND subcatd NOT LIKE '%82%' AND subcatd NOT LIKE '%83%' AND subcatd NOT LIKE '%84%' AND subcatd NOT LIKE '%85%' AND subcatd NOT LIKE '%86%' AND subcatd NOT LIKE '%87%' AND subcatd NOT LIKE '%88%' AND subcatd NOT LIKE '%88%' AND subcatd NOT LIKE '%89%'"); 
}
&print_value(1);
&print_value(2);
&print_value(3);


# Subroutine to print the values
sub print_value {
    my $spots = `$MYSQL $MYSQLOPTS -e "SELECT count(*) as spots FROM $DATABASE.spots WHERE stamp > $FROMSTAMP AND category = $_[0]$_[1];"`;
    $spots =~ /(\d+)/; 
    print "cat".$_[0].".value ".$1."\n"; 
}
