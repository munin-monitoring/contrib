#!/usr/bin/env ruby
@dummyvar = <<-'=cut'
=head2 Description

puppet_runtime - Munin plugin that reports the duration of puppet runs.

=head2 Compatibility

This Plugin is tested with the following configurations:

  Debian: {
    version => 11 {
      Puppet: {
        version => 5.5.22,
        version => 7.14.0,
      }
    }
  }
  Redhat: {
    version => 8 {
      Puppet: {
        version => 6.4.0,
        version => 6.19.1,
        version => 7.9.2,
      }
    }
  }
  Fedora: {
    version => 35 {
      Puppet: {
        version => 7.12.1,
        version => 7.14.0,
      }
    }
  }

=head2 Configuration

The following configuration is mandatory. It must be ensured that 
the plugin is executed by the root user.

  $ cat /etc/munin/plugin-conf.d/puppet.conf 
    [puppet_runtime]
      user root

Further configurations are not necessary. If it does not work, 
then run "puppet config print lastrunreport" and make sure that 
the specified file is readable.

  $ puppet config print lastrunreport

To check the function, perform the following:

  $ munin-run puppet_runtime

An example Output:

  $ munin-run puppet_runtime 
    runtime.value 0.90
    
The duration of the Puppet run is determined from the Puppet report. 
This information can be found in the file last_run_report.yaml. 
The location of the file is determined via the Puppet client: 

=head2 Tips & Tricks

Since you want to integrate the runtime of a puppet run into Munin, 
you will most likely use puppet as well. Here you can find an 
example for your puppet configuration:

  file {'/etc/munin/plugin-conf.d/puppet.conf':
    source => 'puppet:///modules/munin/puppet.conf',
    notify => Service['munin-node'],
  }
  file {'/etc/munin/plugins/puppet_runtime':
    ensure => 'link',
    target => '/usr/share/munin/plugins/puppet_runtime',
  }

=head3 Known issues

The only known issue that can occur is that puppet cannot be found. 
This is because it is not known to the environment used. This issue 
can occur when using the packages from the puppetlabs repo.

In this case, a simple link is enough to fix this issue:

  file {'/usr/bin/puppet':
    ensure => 'link',
    target => '/opt/puppetlabs/bin/puppet',
  }

=cut

def get_runtime
  reportfile = `puppet config print lastrunreport`
  File.open(reportfile.strip).grep(/Applied catalog in/).reverse_each do |line|
    if line =~ /in (.*) seconds/
      puts "runtime.value #{Regexp.last_match(1)}"
      exit 0
    end
  end
end

case ARGV[0]
when 'config'
  puts 'graph_category other'
  puts 'graph_args --base 1000 -l 0'
  puts 'graph_scale no'
  puts 'graph_title Puppet catalog run time'
  puts 'graph_vlabel Seconds'
  puts 'runtime.label Catalog application time'
  exit 0
when 'autoconf'
  puts 'yes'
  exit 0
else
  get_runtime
end
