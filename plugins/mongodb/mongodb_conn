#!/usr/bin/env python
"""
    MongoDB Connection Count Plugin
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

    Connects to a single mongo instance and retrieve
    replication lag for all connected connections.

    munin-node.conf:
    [mongodb_conn]
    env.host 127.0.0.1
    env.port 27017
    env.username user
    env.password P@55w0rd

    :author: Alban Espie-Guillon <alban.espie@alterway.fr> based on Stefan Andersen <stefan@stefanandersen.dk> work.
    :license: The Beer Ware License (Revision 42)
              <alban.espie@alterway.fr> wrote this file. As long
              as you retain this notice you can do whatever you want
              with this stuff. If we meet some day, and you think
              this stuff is worth it, you can buy me a beer in return.
"""
import os
import sys
import pymongo

def _get_connections():
    host = os.environ.get('host', '127.0.0.1')
    port = os.environ.get('port', 27017)
    username = os.environ.get('username', '')
    password = os.environ.get('password', '')
    conn = pymongo.MongoClient(host, int(port))
    if username:
        connAuth = conn['admin']
        connAuth.authenticate(username, password)

    """ cli : db.serverStatus().connections """
    conn_status = conn.admin.command("serverStatus")['connections']
    return conn_status

def run():
    connections = _get_connections();
    for connection, value in connections.items():
        print connection + ".value", value

def config():
    print """
graph_title MongoDB Connections Count
graph_vlabel Connections count
graph_category mongodb
graph_args --base 1000 -l 0
current.label current
current.draw LINE1
available.label available
available.draw LINE2
active.label active
active.draw LINE3
"""

""" Bonus (not included by default) :
totalCreated.type DERIVE
totalCreated.label totalCreated
totalCreated.draw LINE
totalCreated.min 0
"""

if __name__ == "__main__":
    if len(sys.argv) > 1 and sys.argv[1] == "config":
        config()
    else:
        run()
