#!/usr/bin/perl -w

=head1 NAME

Monitor Page-Counter for HP LaserJet Printers.

=head1 AUTHOR

Kai Boenke


=back


#####
# Enable SNMP-Discovery
###
=head1 MAGIC MARKERS
  #%# family=snmpauto
  #%# capabilities=snmpconf
=cut
if (defined $ARGV[0] and $ARGV[0] eq "snmpconf") {
	print "require 1.3.6.1.2.1.43.10.2.1.4\n";
	exit 0;
}


#####
# Initialize
###
use strict;
use Munin::Plugin::SNMP;
my $session	= Munin::Plugin::SNMP->session();


#####
# Declare OIDs
###
use constant oid_black_total		=> ".1.3.6.1.2.1.43.10.2.1.4.1.1";
use constant oid_color_total		=> ".1.3.6.1.4.1.11.2.3.9.4.2.1.4.1.2.7";


#####
# Config
###
if (defined $ARGV[0] and $ARGV[0] eq "config") {
	my ($host) = Munin::Plugin::SNMP->config_session();
	print "host_name $host\n" unless $host eq 'localhost';
	print "graph_category printing";
	print "graph_title HP Printer Page Counters
graph_info This graph shows Page-Counters for HP Printers.
graph_vlabel Pages
graph_args --base 1000 -l 0
";
	print "black.label Black Prints
black.draw AREA
black.colour 000000
";
	exit 0;
}


#####
# Get Values
###
printValue("black", oid_black_total);


#####
# Subroutines
###
sub printValue {
	if(not defined $_[0] || not defined $_[1]) {
		exit 0;
	}
	my $field = $_[0];
	my $oid = $_[1];
	
	if(not oidExists($oid)){
		exit 0;
	}
	
	my $val_cur	= $session->get_single($oid) || 'U';
	if ($val_cur ne 'U') {
		print $field, ".value ", $val_cur, "\n";
	}
}
sub oidExists {
	if(not defined $_[0]) {
		exit 0;
	}
	my $oid = $_[0];
	my $val = $session->get_single($oid) || 'U';
	
	if($val eq 'noSuchInstance' || $val eq 'U'){
		return(0);
	}else{
		return(1);
	}
}
