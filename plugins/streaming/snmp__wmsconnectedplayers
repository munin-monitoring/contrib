#!/usr/bin/perl -w
#
# Copyright (C) 2006 Andy Linton, CityLink, New Zealand
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; version 2 dated June,
# 1991.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#
# Derived from SNMP plugin code written by 
# Jimmy Olsen, Dagfinn Ilmari Mannsaaker
#
#######################################################################
#
# You must enable SNMP for Windows Media Services by running:
#  
# regsvr32 "%systemroot%\system32\windows media\server\wmssnmp.dll
#
#######################################################################
#
# $Log: snmp__wmsConnectedPlayers,v $
# Revision 1.2  2007/08/09 22:14:13  root
# Modified using 'rcsedit'
#
# Revision 1.1  2007/08/09 22:07:16  root
# Checked in using 'rcsedit'
#
#%# family=snmpauto
#%# capabilities=snmpconf

use strict;
use Net::SNMP;

my $DEBUG = 0;
my $MAXLABEL = 20;

my $host      = $ENV{host}      || undef;
my $port      = $ENV{port}      || 161;
my $community = $ENV{community} || "public";
my $iface     = $ENV{interface} || undef;

my $response;

if (defined $ARGV[0] and $ARGV[0] eq "snmpconf")
{
	print "require 1.3.6.1.4.1.311.1.7.13.3.0 [0-9]\n"; # Number
	exit 0;
}

if ($0 =~ /^(?:|.*\/)snmp_([^_]+)_wmsConnectedPlayers$/)
{
	$host  = $1;
	if ($host =~ /^([^:]+):(\d+)$/)
	{
		$host = $1;
		$port = $2;
	}
}
elsif (!defined($host))
{
	print "# Debug: $0 -- $1\n" if $DEBUG;
	die "# Error: couldn't understand what I'm supposed to monitor.";
}

my ($session, $error) = Net::SNMP->session(
		-hostname  => $host,
		-community => $community,
		-port      => $port
	);

if (!defined ($session))
{
	die "Croaking: $error";
}

if (defined $ARGV[0] and $ARGV[0] eq "config")
{
	print "host_name $host\n";
	print "graph_title wmsConnectedPlayers
graph_args --base 1000 -l 0 
graph_vlabel wmsConnectedPlayers
graph_category streaming
graph_info This graph shows wmsConnectedPlayers.
wmsConnectedPlayers.label wmsConnectedPlayers
wmsConnectedPlayers.draw LINE2
wmsConnectedPlayers.info The wmsConnectedPlayers
";

	exit 0;
}

print "wmsConnectedPlayers.value ", &get_single ($session, "1.3.6.1.4.1.311.1.7.13.3.0"), "\n";

sub get_single
{
	my $handle = shift;
	my $oid    = shift;

	print "# Getting single $oid...\n" if $DEBUG;

	$response = $handle->get_request ($oid);

	if (!defined $response->{$oid})
	{
	    return undef;
	}
	else
	{
	    return $response->{$oid};
	}
}

